{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/review-pipeline/schemas/project.schema.json",
  "title": "Project Configuration",
  "description": "Project-specific configuration for the review pipeline",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string",
      "description": "JSON Schema reference"
    },
    "project": {
      "type": "object",
      "description": "Project metadata",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "Project name"
        },
        "language": {
          "type": "string",
          "description": "Primary programming language",
          "enum": ["python", "javascript", "typescript", "go", "java", "rust", "c++", "c#", "ruby", "php", "other"]
        },
        "framework": {
          "type": ["string", "null"],
          "description": "Primary framework if applicable"
        },
        "description": {
          "type": "string",
          "description": "Project description for review context"
        }
      }
    },
    "testing": {
      "type": "object",
      "description": "Project-specific test configuration",
      "additionalProperties": false,
      "properties": {
        "command": {
          "type": "string",
          "description": "Test command to execute"
        },
        "timeout_seconds": {
          "type": "integer",
          "description": "Test execution timeout",
          "minimum": 10,
          "maximum": 1800
        },
        "required_pass_rate": {
          "type": "number",
          "description": "Required test pass rate (0.0-1.0)",
          "minimum": 0.0,
          "maximum": 1.0
        },
        "coverage_threshold": {
          "type": "number",
          "description": "Required code coverage (0.0-1.0)",
          "minimum": 0.0,
          "maximum": 1.0
        },
        "pre_test_commands": {
          "type": "array",
          "description": "Commands to run before tests",
          "items": {
            "type": "string"
          }
        },
        "post_test_commands": {
          "type": "array",
          "description": "Commands to run after tests",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "review_overrides": {
      "type": "object",
      "description": "Override pipeline review settings",
      "additionalProperties": false,
      "properties": {
        "execution": {
          "type": "object",
          "description": "Override execution settings",
          "additionalProperties": false,
          "properties": {
            "parallel": {
              "type": "boolean"
            },
            "timeout_seconds": {
              "type": "integer",
              "minimum": 30,
              "maximum": 600
            }
          }
        },
        "providers": {
          "type": "object",
          "description": "Override provider settings",
          "additionalProperties": false,
          "properties": {
            "claude": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "model": {
                  "type": "string",
                  "enum": ["opus", "sonnet", "haiku"]
                },
                "timeout_override": {
                  "type": ["integer", "null"],
                  "minimum": 30,
                  "maximum": 600
                }
              }
            },
            "codex": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "model": {
                  "type": "string"
                },
                "reasoning_effort": {
                  "type": "string",
                  "enum": ["none", "low", "medium", "high"]
                }
              }
            },
            "gemini": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "model": {
                  "type": "string",
                  "enum": [
                    "gemini-2.5-pro",
                    "gemini-2.5-flash",
                    "gemini-2.0-flash",
                    "gemini-1.5-pro",
                    "gemini-1.5-flash"
                  ]
                }
              }
            }
          }
        },
        "custom_prompts": {
          "type": "object",
          "description": "Custom prompt additions",
          "additionalProperties": false,
          "properties": {
            "prepend": {
              "type": "string",
              "description": "Text to prepend to review prompts"
            },
            "append": {
              "type": "string",
              "description": "Text to append to review prompts"
            },
            "additional_context": {
              "type": "string",
              "description": "Additional context about the project"
            },
            "focus_areas": {
              "type": "array",
              "description": "Areas to focus review on",
              "items": {
                "type": "string"
              }
            },
            "ignore_patterns": {
              "type": "array",
              "description": "Patterns to ignore in review",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "include_patterns": {
          "type": "array",
          "description": "Override file patterns to include",
          "items": {
            "type": "string"
          }
        },
        "exclude_patterns": {
          "type": "array",
          "description": "Override file patterns to exclude",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "review_criteria": {
      "type": "object",
      "description": "Project-specific review criteria and standards",
      "additionalProperties": false,
      "properties": {
        "criteria_file": {
          "type": "string",
          "description": "Path to review criteria markdown file (relative to project root)",
          "default": ".review-criteria.md"
        },
        "project_context": {
          "type": "string",
          "description": "Description of the project's domain and requirements"
        },
        "security_requirements": {
          "type": "array",
          "description": "Security requirements that must be enforced",
          "items": {
            "type": "object",
            "required": ["name"],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the security requirement"
              },
              "description": {
                "type": "string",
                "description": "Detailed description of the requirement"
              },
              "paths": {
                "type": "array",
                "description": "File paths or patterns where this requirement applies",
                "items": {
                  "type": "string"
                }
              },
              "severity_override": {
                "type": "string",
                "enum": ["critical", "high", "medium", "low"],
                "description": "Override severity for violations of this requirement"
              },
              "checks": {
                "type": "array",
                "description": "Specific checks to perform",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "performance_requirements": {
          "type": "object",
          "description": "Performance thresholds and requirements",
          "additionalProperties": false,
          "properties": {
            "response_time_ms": {
              "type": "integer",
              "description": "Maximum acceptable response time in milliseconds",
              "minimum": 1
            },
            "database_queries_per_request": {
              "type": "integer",
              "description": "Maximum database queries allowed per request",
              "minimum": 1
            },
            "memory_limit_mb": {
              "type": "integer",
              "description": "Maximum memory usage in megabytes",
              "minimum": 1
            },
            "cpu_threshold_percent": {
              "type": "integer",
              "description": "Maximum CPU usage percentage",
              "minimum": 1,
              "maximum": 100
            }
          }
        },
        "custom_rules": {
          "type": "array",
          "description": "Custom pattern-based rules to enforce",
          "items": {
            "type": "object",
            "required": ["pattern", "severity", "message"],
            "properties": {
              "pattern": {
                "type": "string",
                "description": "Regex pattern to match against code"
              },
              "severity": {
                "type": "string",
                "enum": ["critical", "high", "medium", "low"],
                "description": "Severity of violations"
              },
              "message": {
                "type": "string",
                "description": "Error message to display when pattern is found"
              },
              "paths": {
                "type": "array",
                "description": "Limit rule to specific paths (optional)",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "critical_paths": {
          "type": "array",
          "description": "Paths requiring extra scrutiny during review",
          "items": {
            "oneOf": [
              {
                "type": "string",
                "description": "Path pattern"
              },
              {
                "type": "object",
                "required": ["path"],
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path pattern"
                  },
                  "description": {
                    "type": "string",
                    "description": "Why this path is critical"
                  }
                }
              }
            ]
          }
        },
        "compliance_requirements": {
          "type": "array",
          "description": "Compliance standards that must be met",
          "items": {
            "type": "object",
            "required": ["standard", "requirements"],
            "properties": {
              "standard": {
                "type": "string",
                "description": "Compliance standard name (e.g., HIPAA, PCI-DSS, SOC2)"
              },
              "requirements": {
                "type": "array",
                "description": "Specific requirements",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "zero_tolerance_issues": {
          "type": "array",
          "description": "Issues that must always be treated as critical",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ci": {
      "type": "object",
      "description": "CI/CD integration settings",
      "additionalProperties": false,
      "properties": {
        "github": {
          "type": "object",
          "description": "GitHub Actions specific settings",
          "additionalProperties": false,
          "properties": {
            "require_approval": {
              "type": "boolean",
              "description": "Require manual approval to run",
              "default": false
            },
            "auto_merge_on_pass": {
              "type": "boolean",
              "description": "Auto-merge PR if review passes",
              "default": false
            },
            "comment_on_pr": {
              "type": "boolean",
              "description": "Post review summary as PR comment",
              "default": true
            },
            "update_comment": {
              "type": "boolean",
              "description": "Update existing comment instead of adding new",
              "default": false
            },
            "labels_on_pass": {
              "type": "array",
              "description": "Labels to add when review passes",
              "items": {
                "type": "string"
              }
            },
            "labels_on_fail": {
              "type": "array",
              "description": "Labels to add when review fails",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "gitlab": {
          "type": "object",
          "description": "GitLab CI specific settings",
          "additionalProperties": false,
          "properties": {
            "comment_on_mr": {
              "type": "boolean",
              "description": "Post review summary as MR comment",
              "default": true
            }
          }
        }
      }
    },
    "notifications": {
      "type": "object",
      "description": "Notification settings",
      "additionalProperties": false,
      "properties": {
        "slack": {
          "type": "object",
          "description": "Slack notification settings",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "webhook_url": {
              "type": "string",
              "format": "uri"
            },
            "channel": {
              "type": "string"
            },
            "notify_on": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["pass", "fail", "must-fix", "all"]
              }
            }
          }
        },
        "email": {
          "type": "object",
          "description": "Email notification settings",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "recipients": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "email"
              }
            },
            "notify_on": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["pass", "fail", "must-fix", "all"]
              }
            }
          }
        }
      }
    },
    "experimental": {
      "type": "object",
      "description": "Experimental features",
      "additionalProperties": true
    }
  }
}