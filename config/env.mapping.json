{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Environment Variable Mappings",
  "description": "Maps environment variables to configuration paths",
  "mappings": [
    {
      "env": "REVIEW_TIMEOUT",
      "path": "execution.timeout_seconds",
      "type": "integer",
      "description": "Global timeout per provider in seconds"
    },
    {
      "env": "REVIEW_PARALLEL",
      "path": "execution.parallel",
      "type": "boolean",
      "description": "Run providers in parallel (true/false)"
    },
    {
      "env": "REVIEW_FAIL_FAST",
      "path": "execution.fail_fast",
      "type": "boolean",
      "description": "Stop on first provider failure"
    },
    {
      "env": "TEST_CMD",
      "path": "testing.command",
      "type": "string",
      "description": "Test command to execute"
    },
    {
      "env": "TEST_TIMEOUT",
      "path": "testing.timeout_seconds",
      "type": "integer",
      "description": "Test execution timeout in seconds"
    },
    {
      "env": "CLAUDE_ENABLED",
      "path": "providers.claude.enabled",
      "type": "boolean",
      "description": "Enable Claude provider"
    },
    {
      "env": "CLAUDE_MODEL",
      "path": "providers.claude.model",
      "type": "string",
      "description": "Claude model to use (opus/sonnet/haiku)"
    },
    {
      "env": "CLAUDE_TIMEOUT",
      "path": "providers.claude.timeout_override",
      "type": "integer",
      "description": "Claude-specific timeout override"
    },
    {
      "env": "CODEX_ENABLED",
      "path": "providers.codex.enabled",
      "type": "boolean",
      "description": "Enable Codex provider"
    },
    {
      "env": "CODEX_MODEL",
      "path": "providers.codex.model",
      "type": "string",
      "description": "Codex model to use"
    },
    {
      "env": "CODEX_REASONING",
      "path": "providers.codex.reasoning_effort",
      "type": "string",
      "description": "Codex reasoning effort (none/low/medium/high)"
    },
    {
      "env": "CODEX_TIMEOUT",
      "path": "providers.codex.timeout_override",
      "type": "integer",
      "description": "Codex-specific timeout override"
    },
    {
      "env": "GEMINI_ENABLED",
      "path": "providers.gemini.enabled",
      "type": "boolean",
      "description": "Enable Gemini provider"
    },
    {
      "env": "GEMINI_MODEL",
      "path": "providers.gemini.model",
      "type": "string",
      "description": "Gemini model to use"
    },
    {
      "env": "GEMINI_TIMEOUT",
      "path": "providers.gemini.timeout_override",
      "type": "integer",
      "description": "Gemini-specific timeout override"
    },
    {
      "env": "GATE_ENABLED",
      "path": "gating.enabled",
      "type": "boolean",
      "description": "Enable gate checks"
    },
    {
      "env": "GATE_MUST_FIX_THRESHOLD",
      "path": "gating.must_fix_threshold",
      "type": "integer",
      "description": "Number of must-fix issues to fail gate"
    },
    {
      "env": "GATE_BLOCK_ON_TEST_FAILURE",
      "path": "gating.block_on_test_failure",
      "type": "boolean",
      "description": "Fail gate if tests fail"
    },
    {
      "env": "OUTPUT_FORMAT",
      "path": "output.format",
      "type": "string",
      "description": "Output format (markdown/json/html)"
    },
    {
      "env": "OUTPUT_VERBOSE",
      "path": "output.verbose",
      "type": "boolean",
      "description": "Verbose output mode"
    },
    {
      "env": "REVIEW_MAX_FILES",
      "path": "review.max_files",
      "type": "integer",
      "description": "Maximum number of files to review"
    },
    {
      "env": "REVIEW_MAX_DIFF_KB",
      "path": "review.max_diff_size_kb",
      "type": "integer",
      "description": "Maximum diff size in KB"
    }
  ]
}